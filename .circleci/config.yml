version: 2
jobs:
  danger:
    docker:
      - image: dantoml/danger:latest
    steps:
      - checkout
      - run: danger
  test_module:
    working_directory: ~/project
    docker:
      - image: circleci/node:8
    steps:
      - checkout:
          path: ~/project

      - run: yarn

      - run:
          name: Typescript Definitions Validation
          command: node typescript_validator.js

      - run:
          name: jest tests
          command: |
            mkdir -p test-results/jest
            yarn run test
          environment:
            JEST_JUNIT_OUTPUT: test-results/jest/junit.xml

      - persist_to_workspace:
          root: ~/project
          paths:
            - node_modules

      - store_test_results:
          path: test-results

      - store_artifacts:
          path: test-results

  test_sample:
    working_directory: ~/project
    docker:
      - image: circleci/node:8
    steps:
      - checkout:
          path: ~/project

      - run: cd InstabugSample && yarn install

      - run:
          name: jest tests
          command: |
            cd InstabugSample
            mkdir -p test-results/jest
            yarn test
          environment:
            JEST_JUNIT_OUTPUT: test-results/jest/junit.xml

      - persist_to_workspace:
          root: ~/project
          paths:
            - InstabugSample/node_modules

      - store_test_results:
          path: InstabugSample/test-results

      - store_artifacts:
          path: InstabugSample/test-results

  test_android:
    working_directory: ~/project/InstabugSample
    docker:
      - image: circleci/android@sha256:793ae9aa1777ba7fc375109978b307ed03a49be468295a8778d588eba0670e4b
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout:
          path: ~/project
      - run: yarn
      - run:
          name: chmod permissions
          command: cd android && chmod +x ./gradlew
      - run:
          name: Download Dependencies
          command: cd android && ./gradlew androidDependencies
      - run:
          name: Run UnitTest
          command: cd android && ./gradlew test

  test_ios:
    macos:
      xcode: "10.2.0"
    working_directory: ~/project/InstabugSample/ios
    environment:
      FL_OUTPUT_DIR: output
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Install node_modules
          command: cd .. && yarn
      - run:
          name: Fetch CocoaPods Specs
          command: curl https://cocoapods-specs.circleci.com/fetch-cocoapods-repo-from-s3.sh  | bash -s cf
      - run:
          name: Install CocoaPods
          command: pod install
      - run:
          name: Build and run tests
          command: xcodebuild    -workspace InstabugSample.xcworkspace    -scheme InstabugSample    -sdk iphonesimulator    -destination 'platform=iOS Simulator,name=iPhone X,OS=12.2'    test | xcpretty

  e2e_ios:
    macos:
      xcode: "10.2.0"
    working_directory: ~/project/InstabugSample
    environment:
      FL_OUTPUT_DIR: output
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Set Application Token
          command: |
            echo 'export INSTABUG_APP_TOKEN="$RN_E2E_APP_TOKEN"' >> $BASH_ENV
            sed -i.bak 's|YOUR_TOKEN|'"$RN_E2E_APP_TOKEN"'|g' App.js
      - run:
          name: Install React Native CLI
          command: npm install -g react-native-cli
      - run:
          name: Install Detox CLI
          command: npm install -g detox-cli
      - run:
          name: Install Detox Utils
          command: brew tap wix/brew && brew install applesimutils
      - run:
          name: Install Node Packages
          command: yarn
      - run:
          name: Fetch CocoaPods Specs
          command: cd ios && curl https://cocoapods-specs.circleci.com/fetch-cocoapods-repo-from-s3.sh  | bash -s cf
      - run:
          name: Install CocoaPods
          command: cd ios && pod install
      - run:
          name: Detox - Build Release App
          command: detox build --configuration ios.sim.release
      - run:
          name: Detox - Run E2E Tests
          command: detox test --configuration ios.sim.release --loglevel trace --debug-synchronization 9000 --take-screenshots failing
      - store_artifacts:
          path: ./artifacts

  e2e_android:
    macos:
      xcode: "10.2.0"
    working_directory: ~/project/InstabugSample
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Set Application Token
          command: |
            echo 'export INSTABUG_APP_TOKEN="$RN_E2E_APP_TOKEN"' >> $BASH_ENV
            sed -i.bak 's|YOUR_TOKEN|'"$RN_E2E_APP_TOKEN"'|g' App.js
            sed -i.bak 's|YOUR_TOKEN|'"$RN_E2E_APP_TOKEN"'|g' android/app/src/main/java/com/instabugsample/MainApplication.java
      - run:
          name: Install Java 8
          command: |
            HOMEBREW_NO_AUTO_UPDATE=1 brew tap AdoptOpenJDK/openjdk
            HOMEBREW_NO_AUTO_UPDATE=1 brew cask install adoptopenjdk/openjdk/adoptopenjdk8
      - run:
          name: Setup Android Environment Variables
          command: |
            echo 'export JAVA_HOME=`/usr/libexec/java_home -v 1.8`' >> $BASH_ENV
            echo 'export ANDROID_HOME=/usr/local/share/android-sdk' >> $BASH_ENV
            echo 'export ANDROID_SDK_ROOT=/usr/local/share/android-sdk' >> $BASH_ENV
            echo 'export PATH=$PATH:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools' >> $BASH_ENV
      - run:
          name: Install Android SDK
          command: |
            HOMEBREW_NO_AUTO_UPDATE=1 brew tap homebrew/cask
            HOMEBREW_NO_AUTO_UPDATE=1 brew cask install android-sdk
      - run:
          name: Accept Android SDK Licenses
          command: (yes | sdkmanager --licenses) || true
      - run:
          name: SDK Manager - Download Emulator Image
          command: (yes | sdkmanager "platform-tools" "platforms;android-27" "extras;intel;Hardware_Accelerated_Execution_Manager" "build-tools;27.0.3" "system-images;android-27;google_apis;x86" "emulator" --verbose) || true
      - run:
          name: AVD Manager - Setup Emulator
          command: avdmanager create avd -n Pixel_API_27 -k "system-images;android-27;google_apis;x86" -g google_apis -d "pixel_xl"
      - run:
          name: Run Emulator in background
          command: /usr/local/share/android-sdk/emulator/emulator @Pixel_API_27 -no-snapshot -noaudio -no-boot-anim -no-window -memory 2048 -logcat '*:e'
          background: true
      - run:
          name: Install Node Packages
          command: sudo yarn
      - run:
          name: Generate Android Keystore
          command: cd android/app && keytool -genkey -v -keystore debug.keystore -storepass android -alias androiddebugkey -keypass android -keyalg RSA -keysize 2048 -validity 10000 -dname "CN=AA, OU=AA, O=AA, L=AA, S=AA, C=EG"
      - run:
          name: Make gradlew Executable
          command: cd android && chmod +x ./gradlew
      - run:
          name: Download Android Dependencies
          command: cd android && ./gradlew androidDependencies
      - run:
          name: Install Detox CLI
          command: sudo npm install -g detox-cli
      - run:
          name: Wait for Emulator
          command: adb wait-for-device shell 'while [[ -z $(getprop dev.bootcomplete) ]]; do sleep 1; done;'
      - run: 
          name: Emulator Post Booting Screenshot
          command: mkdir -p ./early-artifacts && adb shell screencap -p > ./early-artifacts/before-running-detox.png
      - store_artifacts:
          path: ./early-artifacts
      - run:
          name: Detox - Build Release App
          command: |
            sudo chmod -R 777 /Users/distiller/project/InstabugSample/node_modules/instabug-reactnative
            sudo chmod -R 777 /Users/distiller/project/InstabugSample/node_modules/detox
            detox build --configuration android.emu.release
      - run:
          name: Detox - Run E2E Tests
          command: |
            sudo chmod -R 777 /Users/distiller/Library/Detox
            detox test --configuration android.emu.release --loglevel trace --debug-synchronization 9000 --take-screenshots failing
      - store_artifacts:
          path: ./artifacts

  e2e_android2:
    macos:
      xcode: "10.2.0"
    working_directory: ~/project/InstabugSample
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Set Application Token
          command: |
            echo 'export INSTABUG_APP_TOKEN="$RN_E2E_APP_TOKEN"' >> $BASH_ENV
            sed -i.bak 's|YOUR_TOKEN|'"$RN_E2E_APP_TOKEN"'|g' App.js
            sed -i.bak 's|YOUR_TOKEN|'"$RN_E2E_APP_TOKEN"'|g' android/app/src/main/java/com/instabugsample/MainApplication.java
      - run:
          name: Install Java 8
          command: |
            HOMEBREW_NO_AUTO_UPDATE=1 brew tap AdoptOpenJDK/openjdk
            HOMEBREW_NO_AUTO_UPDATE=1 brew cask install adoptopenjdk/openjdk/adoptopenjdk8
      - run:
          name: Setup Android Environment Variables
          command: |
            echo 'export JAVA_HOME=`/usr/libexec/java_home -v 1.8`' >> $BASH_ENV
            echo 'export ANDROID_HOME=/usr/local/share/android-sdk' >> $BASH_ENV
            echo 'export ANDROID_SDK_ROOT=/usr/local/share/android-sdk' >> $BASH_ENV
            echo 'export PATH=$PATH:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools' >> $BASH_ENV
      - run:
          name: Install Android SDK
          command: |
            HOMEBREW_NO_AUTO_UPDATE=1 brew tap homebrew/cask
            HOMEBREW_NO_AUTO_UPDATE=1 brew cask install android-sdk
      - run:
          name: Accept Android SDK Licenses
          command: (yes | sdkmanager --licenses) || true
      - run:
          name: SDK Manager - Download Emulator Image
          command: (yes | sdkmanager "platform-tools" "platforms;android-27" "extras;intel;Hardware_Accelerated_Execution_Manager" "build-tools;27.0.3" "system-images;android-27;google_apis;x86" "emulator" --verbose) || true
      - run:
          name: AVD Manager - Setup Emulator
          command: avdmanager create avd -n Pixel_API_27 -k "system-images;android-27;google_apis;x86" -g google_apis -d "pixel_xl"
      - run:
          name: Run Emulator in background
          command: /usr/local/share/android-sdk/emulator/emulator @Pixel_API_27 -no-snapshot -noaudio -no-boot-anim -no-window -memory 2048 -logcat '*:e'
          background: true
      - run:
          name: Install Node Packages
          command: sudo yarn
      - run:
          name: Generate Android Keystore
          command: cd android/app && keytool -genkey -v -keystore debug.keystore -storepass android -alias androiddebugkey -keypass android -keyalg RSA -keysize 2048 -validity 10000 -dname "CN=AA, OU=AA, O=AA, L=AA, S=AA, C=EG"
      - run:
          name: Make gradlew Executable
          command: cd android && chmod +x ./gradlew
      - run:
          name: Download Android Dependencies
          command: cd android && ./gradlew androidDependencies
      - run:
          name: Install Detox CLI
          command: sudo npm install -g detox-cli
      - run:
          name: Wait for Emulator
          command: adb wait-for-device shell 'while [[ -z $(getprop dev.bootcomplete) ]]; do sleep 1; done;'
      - run: 
          name: Emulator Post Booting Screenshot
          command: mkdir -p ./early-artifacts && adb shell screencap -p > ./early-artifacts/before-running-detox.png
      - store_artifacts:
          path: ./early-artifacts
      - run:
          name: Detox - Build Release App
          command: |
            sudo chmod -R 777 /Users/distiller/project/InstabugSample/node_modules/instabug-reactnative
            sudo chmod -R 777 /Users/distiller/project/InstabugSample/node_modules/detox
            detox build --configuration android.emu.release
      - run:
          name: Detox - Run E2E Tests
          command: |
            sudo chmod -R 777 /Users/distiller/Library/Detox
            detox test --configuration android.emu.release --loglevel trace --debug-synchronization 9000 --take-screenshots failing
      - store_artifacts:
          path: ./artifacts

  e2e_android3:
    macos:
      xcode: "10.2.0"
    working_directory: ~/project/InstabugSample
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Set Application Token
          command: |
            echo 'export INSTABUG_APP_TOKEN="$RN_E2E_APP_TOKEN"' >> $BASH_ENV
            sed -i.bak 's|YOUR_TOKEN|'"$RN_E2E_APP_TOKEN"'|g' App.js
            sed -i.bak 's|YOUR_TOKEN|'"$RN_E2E_APP_TOKEN"'|g' android/app/src/main/java/com/instabugsample/MainApplication.java
      - run:
          name: Install Java 8
          command: |
            HOMEBREW_NO_AUTO_UPDATE=1 brew tap AdoptOpenJDK/openjdk
            HOMEBREW_NO_AUTO_UPDATE=1 brew cask install adoptopenjdk/openjdk/adoptopenjdk8
      - run:
          name: Setup Android Environment Variables
          command: |
            echo 'export JAVA_HOME=`/usr/libexec/java_home -v 1.8`' >> $BASH_ENV
            echo 'export ANDROID_HOME=/usr/local/share/android-sdk' >> $BASH_ENV
            echo 'export ANDROID_SDK_ROOT=/usr/local/share/android-sdk' >> $BASH_ENV
            echo 'export PATH=$PATH:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools' >> $BASH_ENV
      - run:
          name: Install Android SDK
          command: |
            HOMEBREW_NO_AUTO_UPDATE=1 brew tap homebrew/cask
            HOMEBREW_NO_AUTO_UPDATE=1 brew cask install android-sdk
      - run:
          name: Accept Android SDK Licenses
          command: (yes | sdkmanager --licenses) || true
      - run:
          name: SDK Manager - Download Emulator Image
          command: (yes | sdkmanager "platform-tools" "platforms;android-27" "extras;intel;Hardware_Accelerated_Execution_Manager" "build-tools;27.0.3" "system-images;android-27;google_apis;x86" "emulator" --verbose) || true
      - run:
          name: AVD Manager - Setup Emulator
          command: avdmanager create avd -n Pixel_API_27 -k "system-images;android-27;google_apis;x86" -g google_apis -d "pixel_xl"
      - run:
          name: Run Emulator in background
          command: /usr/local/share/android-sdk/emulator/emulator @Pixel_API_27 -no-snapshot -noaudio -no-boot-anim -no-window -memory 2048 -logcat '*:e'
          background: true
      - run:
          name: Install Node Packages
          command: sudo yarn
      - run:
          name: Generate Android Keystore
          command: cd android/app && keytool -genkey -v -keystore debug.keystore -storepass android -alias androiddebugkey -keypass android -keyalg RSA -keysize 2048 -validity 10000 -dname "CN=AA, OU=AA, O=AA, L=AA, S=AA, C=EG"
      - run:
          name: Make gradlew Executable
          command: cd android && chmod +x ./gradlew
      - run:
          name: Download Android Dependencies
          command: cd android && ./gradlew androidDependencies
      - run:
          name: Install Detox CLI
          command: sudo npm install -g detox-cli
      - run:
          name: Wait for Emulator
          command: adb wait-for-device shell 'while [[ -z $(getprop dev.bootcomplete) ]]; do sleep 1; done;'
      - run: 
          name: Emulator Post Booting Screenshot
          command: mkdir -p ./early-artifacts && adb shell screencap -p > ./early-artifacts/before-running-detox.png
      - store_artifacts:
          path: ./early-artifacts
      - run:
          name: Detox - Build Release App
          command: |
            sudo chmod -R 777 /Users/distiller/project/InstabugSample/node_modules/instabug-reactnative
            sudo chmod -R 777 /Users/distiller/project/InstabugSample/node_modules/detox
            detox build --configuration android.emu.release
      - run:
          name: Detox - Run E2E Tests
          command: |
            sudo chmod -R 777 /Users/distiller/Library/Detox
            detox test --configuration android.emu.release --loglevel trace --debug-synchronization 9000 --take-screenshots failing
      - store_artifacts:
          path: ./artifacts

  e2e_android4:
    macos:
      xcode: "10.2.0"
    working_directory: ~/project/InstabugSample
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Set Application Token
          command: |
            echo 'export INSTABUG_APP_TOKEN="$RN_E2E_APP_TOKEN"' >> $BASH_ENV
            sed -i.bak 's|YOUR_TOKEN|'"$RN_E2E_APP_TOKEN"'|g' App.js
            sed -i.bak 's|YOUR_TOKEN|'"$RN_E2E_APP_TOKEN"'|g' android/app/src/main/java/com/instabugsample/MainApplication.java
      - run:
          name: Install Java 8
          command: |
            HOMEBREW_NO_AUTO_UPDATE=1 brew tap AdoptOpenJDK/openjdk
            HOMEBREW_NO_AUTO_UPDATE=1 brew cask install adoptopenjdk/openjdk/adoptopenjdk8
      - run:
          name: Setup Android Environment Variables
          command: |
            echo 'export JAVA_HOME=`/usr/libexec/java_home -v 1.8`' >> $BASH_ENV
            echo 'export ANDROID_HOME=/usr/local/share/android-sdk' >> $BASH_ENV
            echo 'export ANDROID_SDK_ROOT=/usr/local/share/android-sdk' >> $BASH_ENV
            echo 'export PATH=$PATH:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools' >> $BASH_ENV
      - run:
          name: Install Android SDK
          command: |
            HOMEBREW_NO_AUTO_UPDATE=1 brew tap homebrew/cask
            HOMEBREW_NO_AUTO_UPDATE=1 brew cask install android-sdk
      - run:
          name: Accept Android SDK Licenses
          command: (yes | sdkmanager --licenses) || true
      - run:
          name: SDK Manager - Download Emulator Image
          command: (yes | sdkmanager "platform-tools" "platforms;android-27" "extras;intel;Hardware_Accelerated_Execution_Manager" "build-tools;27.0.3" "system-images;android-27;google_apis;x86" "emulator" --verbose) || true
      - run:
          name: AVD Manager - Setup Emulator
          command: avdmanager create avd -n Pixel_API_27 -k "system-images;android-27;google_apis;x86" -g google_apis -d "pixel_xl"
      - run:
          name: Run Emulator in background
          command: /usr/local/share/android-sdk/emulator/emulator @Pixel_API_27 -no-snapshot -noaudio -no-boot-anim -no-window -memory 2048 -logcat '*:e'
          background: true
      - run:
          name: Install Node Packages
          command: sudo yarn
      - run:
          name: Generate Android Keystore
          command: cd android/app && keytool -genkey -v -keystore debug.keystore -storepass android -alias androiddebugkey -keypass android -keyalg RSA -keysize 2048 -validity 10000 -dname "CN=AA, OU=AA, O=AA, L=AA, S=AA, C=EG"
      - run:
          name: Make gradlew Executable
          command: cd android && chmod +x ./gradlew
      - run:
          name: Download Android Dependencies
          command: cd android && ./gradlew androidDependencies
      - run:
          name: Install Detox CLI
          command: sudo npm install -g detox-cli
      - run:
          name: Wait for Emulator
          command: adb wait-for-device shell 'while [[ -z $(getprop dev.bootcomplete) ]]; do sleep 1; done;'
      - run: 
          name: Emulator Post Booting Screenshot
          command: mkdir -p ./early-artifacts && adb shell screencap -p > ./early-artifacts/before-running-detox.png
      - store_artifacts:
          path: ./early-artifacts
      - run:
          name: Detox - Build Release App
          command: |
            sudo chmod -R 777 /Users/distiller/project/InstabugSample/node_modules/instabug-reactnative
            sudo chmod -R 777 /Users/distiller/project/InstabugSample/node_modules/detox
            detox build --configuration android.emu.release
      - run:
          name: Detox - Run E2E Tests
          command: |
            sudo chmod -R 777 /Users/distiller/Library/Detox
            detox test --configuration android.emu.release --loglevel trace --debug-synchronization 9000 --take-screenshots failing
      - store_artifacts:
          path: ./artifacts

  e2e_android5:
    macos:
      xcode: "10.2.0"
    working_directory: ~/project/InstabugSample
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Set Application Token
          command: |
            echo 'export INSTABUG_APP_TOKEN="$RN_E2E_APP_TOKEN"' >> $BASH_ENV
            sed -i.bak 's|YOUR_TOKEN|'"$RN_E2E_APP_TOKEN"'|g' App.js
            sed -i.bak 's|YOUR_TOKEN|'"$RN_E2E_APP_TOKEN"'|g' android/app/src/main/java/com/instabugsample/MainApplication.java
      - run:
          name: Install Java 8
          command: |
            HOMEBREW_NO_AUTO_UPDATE=1 brew tap AdoptOpenJDK/openjdk
            HOMEBREW_NO_AUTO_UPDATE=1 brew cask install adoptopenjdk/openjdk/adoptopenjdk8
      - run:
          name: Setup Android Environment Variables
          command: |
            echo 'export JAVA_HOME=`/usr/libexec/java_home -v 1.8`' >> $BASH_ENV
            echo 'export ANDROID_HOME=/usr/local/share/android-sdk' >> $BASH_ENV
            echo 'export ANDROID_SDK_ROOT=/usr/local/share/android-sdk' >> $BASH_ENV
            echo 'export PATH=$PATH:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools' >> $BASH_ENV
      - run:
          name: Install Android SDK
          command: |
            HOMEBREW_NO_AUTO_UPDATE=1 brew tap homebrew/cask
            HOMEBREW_NO_AUTO_UPDATE=1 brew cask install android-sdk
      - run:
          name: Accept Android SDK Licenses
          command: (yes | sdkmanager --licenses) || true
      - run:
          name: SDK Manager - Download Emulator Image
          command: (yes | sdkmanager "platform-tools" "platforms;android-27" "extras;intel;Hardware_Accelerated_Execution_Manager" "build-tools;27.0.3" "system-images;android-27;google_apis;x86" "emulator" --verbose) || true
      - run:
          name: AVD Manager - Setup Emulator
          command: avdmanager create avd -n Pixel_API_27 -k "system-images;android-27;google_apis;x86" -g google_apis -d "pixel_xl"
      - run:
          name: Run Emulator in background
          command: /usr/local/share/android-sdk/emulator/emulator @Pixel_API_27 -no-snapshot -noaudio -no-boot-anim -no-window -memory 2048 -logcat '*:e'
          background: true
      - run:
          name: Install Node Packages
          command: sudo yarn
      - run:
          name: Generate Android Keystore
          command: cd android/app && keytool -genkey -v -keystore debug.keystore -storepass android -alias androiddebugkey -keypass android -keyalg RSA -keysize 2048 -validity 10000 -dname "CN=AA, OU=AA, O=AA, L=AA, S=AA, C=EG"
      - run:
          name: Make gradlew Executable
          command: cd android && chmod +x ./gradlew
      - run:
          name: Download Android Dependencies
          command: cd android && ./gradlew androidDependencies
      - run:
          name: Install Detox CLI
          command: sudo npm install -g detox-cli
      - run:
          name: Wait for Emulator
          command: adb wait-for-device shell 'while [[ -z $(getprop dev.bootcomplete) ]]; do sleep 1; done;'
      - run: 
          name: Emulator Post Booting Screenshot
          command: mkdir -p ./early-artifacts && adb shell screencap -p > ./early-artifacts/before-running-detox.png
      - store_artifacts:
          path: ./early-artifacts
      - run:
          name: Detox - Build Release App
          command: |
            sudo chmod -R 777 /Users/distiller/project/InstabugSample/node_modules/instabug-reactnative
            sudo chmod -R 777 /Users/distiller/project/InstabugSample/node_modules/detox
            detox build --configuration android.emu.release
      - run:
          name: Detox - Run E2E Tests
          command: |
            sudo chmod -R 777 /Users/distiller/Library/Detox
            detox test --configuration android.emu.release --loglevel trace --debug-synchronization 9000 --take-screenshots failing
      - store_artifacts:
          path: ./artifacts

  e2e_android6:
    macos:
      xcode: "10.2.0"
    working_directory: ~/project/InstabugSample
    steps:
      - checkout:
          path: ~/project
      - run:
          name: Set Application Token
          command: |
            echo 'export INSTABUG_APP_TOKEN="$RN_E2E_APP_TOKEN"' >> $BASH_ENV
            sed -i.bak 's|YOUR_TOKEN|'"$RN_E2E_APP_TOKEN"'|g' App.js
            sed -i.bak 's|YOUR_TOKEN|'"$RN_E2E_APP_TOKEN"'|g' android/app/src/main/java/com/instabugsample/MainApplication.java
      - run:
          name: Install Java 8
          command: |
            HOMEBREW_NO_AUTO_UPDATE=1 brew tap AdoptOpenJDK/openjdk
            HOMEBREW_NO_AUTO_UPDATE=1 brew cask install adoptopenjdk/openjdk/adoptopenjdk8
      - run:
          name: Setup Android Environment Variables
          command: |
            echo 'export JAVA_HOME=`/usr/libexec/java_home -v 1.8`' >> $BASH_ENV
            echo 'export ANDROID_HOME=/usr/local/share/android-sdk' >> $BASH_ENV
            echo 'export ANDROID_SDK_ROOT=/usr/local/share/android-sdk' >> $BASH_ENV
            echo 'export PATH=$PATH:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools' >> $BASH_ENV
      - run:
          name: Install Android SDK
          command: |
            HOMEBREW_NO_AUTO_UPDATE=1 brew tap homebrew/cask
            HOMEBREW_NO_AUTO_UPDATE=1 brew cask install android-sdk
      - run:
          name: Accept Android SDK Licenses
          command: (yes | sdkmanager --licenses) || true
      - run:
          name: SDK Manager - Download Emulator Image
          command: (yes | sdkmanager "platform-tools" "platforms;android-27" "extras;intel;Hardware_Accelerated_Execution_Manager" "build-tools;27.0.3" "system-images;android-27;google_apis;x86" "emulator" --verbose) || true
      - run:
          name: AVD Manager - Setup Emulator
          command: avdmanager create avd -n Pixel_API_27 -k "system-images;android-27;google_apis;x86" -g google_apis -d "pixel_xl"
      - run:
          name: Run Emulator in background
          command: /usr/local/share/android-sdk/emulator/emulator @Pixel_API_27 -no-snapshot -noaudio -no-boot-anim -no-window -memory 2048 -logcat '*:e'
          background: true
      - run:
          name: Install Node Packages
          command: sudo yarn
      - run:
          name: Generate Android Keystore
          command: cd android/app && keytool -genkey -v -keystore debug.keystore -storepass android -alias androiddebugkey -keypass android -keyalg RSA -keysize 2048 -validity 10000 -dname "CN=AA, OU=AA, O=AA, L=AA, S=AA, C=EG"
      - run:
          name: Make gradlew Executable
          command: cd android && chmod +x ./gradlew
      - run:
          name: Download Android Dependencies
          command: cd android && ./gradlew androidDependencies
      - run:
          name: Install Detox CLI
          command: sudo npm install -g detox-cli
      - run:
          name: Wait for Emulator
          command: adb wait-for-device shell 'while [[ -z $(getprop dev.bootcomplete) ]]; do sleep 1; done;'
      - run: 
          name: Emulator Post Booting Screenshot
          command: mkdir -p ./early-artifacts && adb shell screencap -p > ./early-artifacts/before-running-detox.png
      - store_artifacts:
          path: ./early-artifacts
      - run:
          name: Detox - Build Release App
          command: |
            sudo chmod -R 777 /Users/distiller/project/InstabugSample/node_modules/instabug-reactnative
            sudo chmod -R 777 /Users/distiller/project/InstabugSample/node_modules/detox
            detox build --configuration android.emu.release
      - run:
          name: Detox - Run E2E Tests
          command: |
            sudo chmod -R 777 /Users/distiller/Library/Detox
            detox test --configuration android.emu.release --loglevel trace --debug-synchronization 9000 --take-screenshots failing
      - store_artifacts:
          path: ./artifacts

workflows:
  version: 2
  publish:
    jobs:
      # - danger:
      #     context: cross-platform
      # - test_module
      # - test_sample
      # - test_android
      # - test_ios
      - e2e_ios:
          context: cross-platform
      - e2e_android:
          context: cross-platform
      - e2e_android2:
          context: cross-platform
      - e2e_android3:
          context: cross-platform
      - e2e_android4:
          context: cross-platform
      - e2e_android5:
          context: cross-platform
      - e2e_android6:
          context: cross-platform
      - hold:
          requires:
            # - test_module
            # - test_sample
            # - test_android
            # - test_ios
            - e2e_ios
            - e2e_android
          type: approval
          filters:
            branches:
              only: master
      - publish:
          context: cross-platform
          requires:
            - hold
          filters:
            branches:
              only: master
